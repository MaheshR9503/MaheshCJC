<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-13T15:55:33 IST" name="Default suite" finished-at="2022-10-13T15:55:58 IST" duration-ms="25351">
    <groups>
    </groups>
    <test started-at="2022-10-13T15:55:33 IST" name="Default test" finished-at="2022-10-13T15:55:58 IST" duration-ms="25351">
      <class name="pom_DemoGuru.Test1">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:pom_DemoGuru.Test1@3c73951]" started-at="2022-10-13T15:55:29 IST" name="openBrowser" finished-at="2022-10-13T15:55:33 IST" duration-ms="3593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="getUrl()[pri:0, instance:pom_DemoGuru.Test1@3c73951]" started-at="2022-10-13T15:55:33 IST" name="getUrl" finished-at="2022-10-13T15:55:41 IST" duration-ms="8436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUrl -->
        <test-method is-config="true" signature="max()[pri:0, instance:pom_DemoGuru.Test1@3c73951]" started-at="2022-10-13T15:55:41 IST" name="max" finished-at="2022-10-13T15:55:41 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- max -->
        <test-method signature="reg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:pom_DemoGuru.Test1@3c73951]" started-at="2022-10-13T15:55:43 IST" name="reg" data-provider="regElement" finished-at="2022-10-13T15:55:46 IST" duration-ms="3318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mahesh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Raghu]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9209006400]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[QQQQ]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Akurdi]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Pune]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Maharashtra]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[411035]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[BASSA DE INDIA]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[QQQQ]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[qqqq]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[qqqq]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:2, instance:pom_DemoGuru.Test1@3c73951]" started-at="2022-10-13T15:55:47 IST" name="login" data-provider="data" finished-at="2022-10-13T15:55:51 IST" duration-ms="4878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[QQQQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qqqq]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="flight()[pri:3, instance:pom_DemoGuru.Test1@3c73951]" started-at="2022-10-13T15:55:51 IST" name="flight" finished-at="2022-10-13T15:55:58 IST" duration-ms="6455" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [After flight finder - No Seats Avaialble] but found [After flight finder - No Seats Avaialble  ]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [After flight finder - No Seats Avaialble] but found [After flight finder - No Seats Avaialble  ]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at pom_DemoGuru.Test1.flight(Test1.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flight -->
      </class> <!-- pom_DemoGuru.Test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
